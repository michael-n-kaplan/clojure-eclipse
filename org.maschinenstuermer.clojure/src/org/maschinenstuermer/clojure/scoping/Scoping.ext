import emf;
import clojure;
	
Set[SymbolDef] scope(EObject e):
	globalDefs(e).addAll(lexicalDefs(e));

boolean isLocalDef(EObject e):
	false;
		
boolean isLocalDef(NameBinding n):
	true;

boolean isLocalDef(Fn f):
	true;
	
boolean isGlobalDef(EObject e):
	false; 
	 
boolean isGlobalDef(SymbolDef s):
	!isLocalDef(e);
	
Set[SymbolDef] globalDefs(EObject e):
	e.eRootContainer.eAllContents.select(s|isGlobalDef(s));
	
Set[SymbolDef] lexicalDefs(Lambda l):
	l.params.binding.eAllContents.typeSelect(NameBinding)
		.addAll(lexicalDefs(l.eContainer));

Set[SymbolDef] lexicalDefs(VarBinding v):
	lexicalDefs(v.eContainer.eContainer);

Set[SymbolDef] lexicalDefs(LexicalScope l):
	l.bindings.binding.eAllContents.typeSelect(NameBinding)
		.addAll(lexicalDefs(l.eContainer));
	
Set[SymbolDef] lexicalDefs(EObject e):
	e.eContainer == null ? 
		{} : lexicalDefs(e.eContainer);	
	 	

			 